{"version":3,"sources":["app.min.js"],"names":["config","$routeProvider","$locationProvider","when","templateUrl","controller","controllerAs","otherwise","redirectTo","html5Mode","run","$rootScope","$location","authentication","$on","event","nextRoute","currentRoute","path","isLoggedIn","angular","module","homeCtrl","profileCtrl","$http","fmkData","vm","this","user","getProfile","success","data","reminders","error","e","console","showAddReminderSlideDown","newReminder","title","remindEveryDays","showAddReminder","hideAddReminder","createNewReminder","post","headers","Authorization","getToken","push","deleteReminder","reminder","_id","i","thisReminder","splice","$inject","loginCtrl","credentials","email","password","onSubmit","login","err","log","then","registerCtrl","name","register","$window","saveToken","token","localStorage","payload","split","atob","JSON","parse","exp","Date","now","currentUser","logout","removeItem","service","get","navigationCtrl","isCurrentPath","navigation","restrict","directive"],"mappings":"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","file":"app.min.js","sourcesContent":["(function () {\n\n  angular.module('forgetMeKnotApp', ['ngRoute']);\n\n  function config ($routeProvider, $locationProvider) {\n    $routeProvider\n      .when('/', {\n        templateUrl: 'home/home.view.html',\n        controller: 'homeCtrl',\n        controllerAs: 'vm'\n      })\n      .when('/register', {\n        templateUrl: '/auth/register/register.view.html',\n        controller: 'registerCtrl',\n        controllerAs: 'vm'\n      })\n      .when('/login', {\n        templateUrl: '/auth/login/login.view.html',\n        controller: 'loginCtrl',\n        controllerAs: 'vm'\n      })\n      .when('/profile', {\n        templateUrl: '/profile/profile.view.html',\n        controller: 'profileCtrl',\n        controllerAs: 'vm'\n      })\n      .otherwise({redirectTo: '/'});\n\n    // use the HTML5 History API\n    $locationProvider.html5Mode(true);\n  }\n\n  function run($rootScope, $location, authentication) {\n    $rootScope.$on('$routeChangeStart', function(event, nextRoute, currentRoute) {\n      if ($location.path() === '/profile' && !authentication.isLoggedIn()) {\n        $location.path('/');\n      }\n    });\n  }\n\n  angular\n    .module('forgetMeKnotApp')\n    .config(['$routeProvider', '$locationProvider', config])\n    .run(['$rootScope', '$location', 'authentication', run]);\n\n})();\n\n(function() {\n\n  angular\n    .module('forgetMeKnotApp')\n    .controller('homeCtrl', homeCtrl);\n\n    function homeCtrl () {\n\n    }\n})();\n\n(function() {\n\n  angular\n    .module('forgetMeKnotApp')\n    .controller('profileCtrl', profileCtrl);\n\n  profileCtrl.$inject = ['$location', '$http', 'fmkData', 'authentication'];\n\n  function profileCtrl($location, $http, fmkData, authentication) {\n    var vm = this;\n\n    /* User */\n    vm.user = {};\n\n    fmkData.getProfile()\n      .success(function(data) {\n        vm.user = data.user;\n        vm.reminders = data.reminders;\n      })\n      .error(function (e) {\n        console.error(e);\n      });\n\n    /* Reminders */\n    vm.reminders = [];\n    vm.showAddReminderSlideDown = false;\n    vm.newReminder = {\"title\": \"Call my Mom\", \"remindEveryDays\": 7};\n\n    vm.showAddReminder = function() {\n      vm.showAddReminderSlideDown = true;\n    }\n\n    vm.hideAddReminder = function() {\n      vm.showAddReminderSlideDown = false;\n\n    }\n\n    vm.createNewReminder = function() {\n      $http.post('/api/reminders', vm.newReminder, {\n        headers: {\n          Authorization: 'Bearer '+ authentication.getToken()\n        }\n      }).success(function(data) {\n        vm.reminders.push(data);\n        vm.hideAddReminder();\n      }).error(function (e) {\n        console.error(e);\n      });\n    };\n\n    vm.deleteReminder = function(reminder) {\n      $http.delete('/api/reminders/' + reminder._id, {\n        headers: {\n          Authorization: 'Bearer '+ authentication.getToken()\n        }\n      }).success(function(data) {\n        for (var i in vm.reminders) {\n          var thisReminder = vm.reminders[i];\n          if (thisReminder._id === reminder._id) {\n            vm.reminders.splice(i, i + 1);\n            break;\n          }\n        }\n      }).error(function (e) {\n        console.error(e);\n      });\n    };\n  }\n})();\n\n(function () {\n\n  angular\n    .module('forgetMeKnotApp')\n    .controller('loginCtrl', loginCtrl);\n\n  loginCtrl.$inject = ['$location', 'authentication'];\n  function loginCtrl($location, authentication) {\n    var vm = this;\n\n    vm.credentials = {\n      email : \"\",\n      password : \"\"\n    };\n\n    vm.onSubmit = function () {\n      authentication\n        .login(vm.credentials)\n        .error(function(err){\n          console.log(err); /* TODO: Display error */\n        })\n        .then(function(){\n          $location.path('profile');\n        });\n    };\n\n  }\n\n})();\n\n(function () {\n\n  angular\n    .module('forgetMeKnotApp')\n    .controller('registerCtrl', registerCtrl);\n\n  registerCtrl.$inject = ['$location', 'authentication'];\n  function registerCtrl($location, authentication) {\n    var vm = this;\n\n    vm.credentials = {\n      name : \"\",\n      email : \"\",\n      password : \"\"\n    };\n\n    vm.onSubmit = function () {\n      console.log('Submitting registration');\n      authentication\n        .register(vm.credentials)\n        .error(function(err){\n          console.log(err); /* TODO: Display error */\n        })\n        .then(function(){\n          $location.path('profile');\n        });\n    };\n  }\n})();\n\n(function () {\n\n  angular\n    .module('forgetMeKnotApp')\n    .service('authentication', authentication);\n\n  authentication.$inject = ['$http', '$window'];\n  function authentication ($http, $window) {\n\n    var saveToken = function (token) {\n      $window.localStorage['fmk-token'] = token;\n    };\n\n    var getToken = function () {\n      return $window.localStorage['fmk-token'];\n    };\n\n    var isLoggedIn = function() {\n      var token = getToken();\n      var payload;\n\n      if(token){\n        payload = token.split('.')[1];\n        payload = $window.atob(payload);\n        payload = JSON.parse(payload);\n\n        return payload.exp > Date.now() / 1000;\n      } else {\n        return false;\n      }\n    };\n\n    var currentUser = function() {\n      if(isLoggedIn()){\n        var token = getToken();\n        var payload = token.split('.')[1];\n        payload = $window.atob(payload);\n        payload = JSON.parse(payload);\n        return {\n          email : payload.email,\n          name : payload.name\n        };\n      }\n    };\n\n    register = function(user) {\n      return $http.post('/api/register', user).success(function(data){\n        saveToken(data.token);\n      });\n    };\n\n    login = function(user) {\n      return $http.post('/api/login', user).success(function(data) {\n        saveToken(data.token);\n      });\n    };\n\n    logout = function() {\n      $window.localStorage.removeItem('fmk-token');\n    };\n\n    return {\n      currentUser : currentUser,\n      saveToken : saveToken,\n      getToken : getToken,\n      isLoggedIn : isLoggedIn,\n      register : register,\n      login : login,\n      logout : logout\n    };\n  }\n\n})();\n\n(function() {\n  angular\n    .module('forgetMeKnotApp')\n    .service('fmkData', fmkData);\n\n  fmkData.$inject = ['$http', 'authentication'];\n  function fmkData ($http, authentication) {\n\n    var getProfile = function () {\n      return $http.get('/api/profile', {\n        headers: {\n          Authorization: 'Bearer '+ authentication.getToken()\n        }\n      });\n    };\n\n    return {\n      getProfile : getProfile\n    };\n  }\n})();\n\n(function () {\n\n  angular\n    .module('forgetMeKnotApp')\n    .controller('navigationCtrl', navigationCtrl);\n\n  navigationCtrl.$inject = ['$location','authentication'];\n  function navigationCtrl($location, authentication) {\n    var vm = this;\n\n    vm.isLoggedIn = authentication.isLoggedIn();\n\n    vm.logout = function() {\n      authentication.logout();\n      $location.path('/');\n    }\n\n    vm.currentUser = authentication.currentUser();\n\n    vm.isCurrentPath = function (path) {\n        return $location.path() == path;\n    };\n  }\n})();\n\n(function () {\n\n  angular\n    .module('forgetMeKnotApp')\n    .directive('navigation', navigation);\n\n  function navigation () {\n    return {\n      restrict: 'EA',\n      templateUrl: '/common/directives/navigation/navigation.template.html',\n      controller: 'navigationCtrl as navvm'\n    };\n  }\n\n})();\n"]}