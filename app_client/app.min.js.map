{"version":3,"sources":["app.min.js"],"names":["config","$routeProvider","$locationProvider","when","templateUrl","controller","controllerAs","otherwise","redirectTo","html5Mode","run","$rootScope","$location","authentication","$on","event","nextRoute","currentRoute","path","isLoggedIn","angular","module","homeCtrl","profileCtrl","fmkData","vm","this","user","getProfile","success","data","error","e","console","log","$inject","loginCtrl","credentials","email","password","onSubmit","login","err","then","registerCtrl","name","register","$http","$window","saveToken","token","localStorage","getToken","payload","split","atob","JSON","parse","exp","Date","now","currentUser","post","logout","removeItem","service","get","headers","Authorization","navigationCtrl","isCurrentPath","navigation","restrict","directive"],"mappings":"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","file":"app.min.js","sourcesContent":["(function () {\n\n  angular.module('forgetMeKnotApp', ['ngRoute']);\n\n  function config ($routeProvider, $locationProvider) {\n    $routeProvider\n      .when('/', {\n        templateUrl: 'home/home.view.html',\n        controller: 'homeCtrl',\n        controllerAs: 'vm'\n      })\n      .when('/register', {\n        templateUrl: '/auth/register/register.view.html',\n        controller: 'registerCtrl',\n        controllerAs: 'vm'\n      })\n      .when('/login', {\n        templateUrl: '/auth/login/login.view.html',\n        controller: 'loginCtrl',\n        controllerAs: 'vm'\n      })\n      .when('/profile', {\n        templateUrl: '/profile/profile.view.html',\n        controller: 'profileCtrl',\n        controllerAs: 'vm'\n      })\n      .otherwise({redirectTo: '/'});\n\n    // use the HTML5 History API\n    $locationProvider.html5Mode(true);\n  }\n\n  function run($rootScope, $location, authentication) {\n    $rootScope.$on('$routeChangeStart', function(event, nextRoute, currentRoute) {\n      if ($location.path() === '/profile' && !authentication.isLoggedIn()) {\n        $location.path('/');\n      }\n    });\n  }\n\n  angular\n    .module('forgetMeKnotApp')\n    .config(['$routeProvider', '$locationProvider', config])\n    .run(['$rootScope', '$location', 'authentication', run]);\n\n})();\n\n(function() {\n\n  angular\n    .module('forgetMeKnotApp')\n    .controller('homeCtrl', homeCtrl);\n\n    function homeCtrl () {\n\n    }\n})();\n\n(function() {\n\n  angular\n    .module('forgetMeKnotApp')\n    .controller('profileCtrl', profileCtrl);\n\n  profileCtrl.$inject = ['$location', 'fmkData'];\n  function profileCtrl($location, fmkData) {\n    var vm = this;\n\n    vm.user = {};\n\n    fmkData.getProfile()\n      .success(function(data) {\n        vm.user = data;\n      })\n      .error(function (e) {\n        console.log(e);\n      });\n  }\n\n})();\n\n(function () {\n\n  angular\n  .module('forgetMeKnotApp')\n  .controller('loginCtrl', loginCtrl);\n\n  loginCtrl.$inject = ['$location', 'authentication'];\n  function loginCtrl($location, authentication) {\n    var vm = this;\n\n    vm.credentials = {\n      email : \"\",\n      password : \"\"\n    };\n\n    vm.onSubmit = function () {\n      authentication\n        .login(vm.credentials)\n        .error(function(err){\n          console.log(err); /* TODO: Display error */\n        })\n        .then(function(){\n          $location.path('profile');\n        });\n    };\n\n  }\n\n})();\n\n(function () {\n\n  angular\n    .module('forgetMeKnotApp')\n    .controller('registerCtrl', registerCtrl);\n\n  registerCtrl.$inject = ['$location', 'authentication'];\n  function registerCtrl($location, authentication) {\n    var vm = this;\n\n    vm.credentials = {\n      name : \"\",\n      email : \"\",\n      password : \"\"\n    };\n\n    vm.onSubmit = function () {\n      console.log('Submitting registration');\n      authentication\n        .register(vm.credentials)\n        .error(function(err){\n          console.log(err); /* TODO: Display error */\n        })\n        .then(function(){\n          $location.path('profile');\n        });\n    };\n  }\n})();\n\n(function () {\n\n  angular\n    .module('forgetMeKnotApp')\n    .service('authentication', authentication);\n\n  authentication.$inject = ['$http', '$window'];\n  function authentication ($http, $window) {\n\n    var saveToken = function (token) {\n      $window.localStorage['fmk-token'] = token;\n    };\n\n    var getToken = function () {\n      return $window.localStorage['fmk-token'];\n    };\n\n    var isLoggedIn = function() {\n      var token = getToken();\n      var payload;\n\n      if(token){\n        payload = token.split('.')[1];\n        payload = $window.atob(payload);\n        payload = JSON.parse(payload);\n\n        return payload.exp > Date.now() / 1000;\n      } else {\n        return false;\n      }\n    };\n\n    var currentUser = function() {\n      if(isLoggedIn()){\n        var token = getToken();\n        var payload = token.split('.')[1];\n        payload = $window.atob(payload);\n        payload = JSON.parse(payload);\n        return {\n          email : payload.email,\n          name : payload.name\n        };\n      }\n    };\n\n    register = function(user) {\n      return $http.post('/api/register', user).success(function(data){\n        saveToken(data.token);\n      });\n    };\n\n    login = function(user) {\n      return $http.post('/api/login', user).success(function(data) {\n        saveToken(data.token);\n      });\n    };\n\n    logout = function() {\n      $window.localStorage.removeItem('fmk-token');\n    };\n\n    return {\n      currentUser : currentUser,\n      saveToken : saveToken,\n      getToken : getToken,\n      isLoggedIn : isLoggedIn,\n      register : register,\n      login : login,\n      logout : logout\n    };\n  }\n\n})();\n\n(function() {\n\n  angular\n    .module('forgetMeKnotApp')\n    .service('fmkData', fmkData);\n\n  fmkData.$inject = ['$http', 'authentication'];\n  function fmkData ($http, authentication) {\n\n    var getProfile = function () {\n      return $http.get('/api/profile', {\n        headers: {\n          Authorization: 'Bearer '+ authentication.getToken()\n        }\n      });\n    };\n\n    return {\n      getProfile : getProfile\n    };\n  }\n\n})();\n\n(function () {\n\n  angular\n    .module('forgetMeKnotApp')\n    .controller('navigationCtrl', navigationCtrl);\n\n  navigationCtrl.$inject = ['$location','authentication'];\n  function navigationCtrl($location, authentication) {\n    var vm = this;\n\n    vm.isLoggedIn = authentication.isLoggedIn();\n\n    vm.currentUser = authentication.currentUser();\n\n    vm.isCurrentPath = function (path) {\n        return $location.path() == path;\n    };\n  }\n})();\n\n(function () {\n\n  angular\n    .module('forgetMeKnotApp')\n    .directive('navigation', navigation);\n\n  function navigation () {\n    return {\n      restrict: 'EA',\n      templateUrl: '/common/directives/navigation/navigation.template.html',\n      controller: 'navigationCtrl as navvm'\n    };\n  }\n\n})();\n"]}