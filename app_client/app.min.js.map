{"version":3,"sources":["app.min.js"],"names":["config","$routeProvider","$locationProvider","when","templateUrl","controller","controllerAs","otherwise","redirectTo","html5Mode","run","$rootScope","$location","authentication","$on","event","nextRoute","currentRoute","path","isLoggedIn","angular","module","homeCtrl","profileCtrl","$http","fmkData","fmkAlert","vm","this","user","getProfile","success","data","reminders","error","e","console","showAddReminderSlideDown","newReminder","type","title","remindEveryDays","showAddReminder","hideAddReminder","createNewReminder","post","headers","Authorization","getToken","push","err","showErrorAlert","message","showUpdateReminderSlideDown","focusedUpdateReminder","renderUpdateReminderSlideDown","reminder","clearActiveReminders","currentTarget","classList","add","stopPropagation","hideUpdateReminder","document","querySelectorAll","i","length","remove","updateReminder","deleteReminder","_id","thisReminder","splice","$inject","loginCtrl","credentials","email","password","onSubmit","login","then","registerCtrl","name","log","register","$timeout","showSuccess","successMessage","showSuccessAlert","showError","errorMessage","service","$window","saveToken","token","localStorage","payload","split","atob","JSON","parse","exp","Date","now","currentUser","logout","removeItem","get","navigationCtrl","isCurrentPath","navigation","restrict","directive"],"mappings":"CAAA,WAIE,QAASA,GAAQC,EAAgBC,GAC/BD,EACGE,KAAK,KACJC,YAAa,sBACbC,WAAY,WACZC,aAAc,OAEfH,KAAK,aACJC,YAAa,oCACbC,WAAY,eACZC,aAAc,OAEfH,KAAK,UACJC,YAAa,8BACbC,WAAY,YACZC,aAAc,OAEfH,KAAK,YACJC,YAAa,6BACbC,WAAY,cACZC,aAAc,OAEfC,WAAWC,WAAY,MAG1BN,EAAkBO,WAAU,GAG9B,QAASC,GAAIC,EAAYC,EAAWC,GAClCF,EAAWG,IAAI,oBAAqB,SAASC,EAAOC,EAAWC,GACpC,aAArBL,EAAUM,QAA0BL,EAAeM,cACrDP,EAAUM,KAAK,OAjCrBE,QAAQC,OAAO,mBAAoB,YAsCnCD,QACGC,OAAO,mBACPrB,QAAQ,iBAAkB,oBAAqBA,IAC/CU,KAAK,aAAc,YAAa,iBAAkBA,OAIvD,WAMI,QAASY,MAJXF,QACGC,OAAO,mBACPhB,WAAW,WAAYiB,MAO5B,WAQE,QAASC,GAAYX,EAAWY,EAAOC,EAASC,EAAUb,GACxD,GAAIc,GAAKC,IAGTD,GAAGE,QAEHJ,EAAQK,aACLC,QAAQ,SAASC,GAChBL,EAAGE,KAAOG,EAAKH,KACfF,EAAGM,UAAYD,EAAKC,YAErBC,MAAM,SAAUC,GACfC,QAAQF,MAAMC,KAMlBR,EAAGM,aAKHN,EAAGU,0BAA2B,EAC9BV,EAAGW,aAAeC,KAAQ,MAAOC,MAAS,cAAeC,gBAAmB,GAE5Ed,EAAGe,gBAAkB,WACnBf,EAAGU,0BAA2B,GAGhCV,EAAGgB,gBAAkB,WACnBhB,EAAGU,0BAA2B,GAGhCV,EAAGiB,kBAAoB,WACrBpB,EAAMqB,KAAK,iBAAkBlB,EAAGW,aAC9BQ,SACEC,cAAe,UAAWlC,EAAemC,cAE1CjB,QAAQ,SAASC,GAClBL,EAAGM,UAAUgB,KAAKjB,GAClBL,EAAGgB,oBACFT,MAAM,SAAUgB,GACjBxB,EAASyB,eAAeD,EAAIE,YAOhCzB,EAAG0B,6BAA8B,EACjC1B,EAAG2B,uBAAyBf,KAAQ,UAEpCZ,EAAG4B,8BAAgC,SAASC,GAC1C7B,EAAG8B,uBACH1C,MAAM2C,cAAcC,UAAUC,IAAI,iBAClCjC,EAAG2B,sBAAwBE,EAC3B7B,EAAG2B,sBAAsBf,KAAO,SAChCZ,EAAG0B,6BAA8B,EACjCtC,MAAM8C,mBAGRlC,EAAGmC,mBAAqB,WACtBnC,EAAG0B,6BAA8B,EACjC1B,EAAG8B,wBAGL9B,EAAG8B,qBAAuB,WAExB,IAAK,GADDxB,GAAY8B,SAASC,iBAAiB,2BACjCC,EAAI,EAAGA,EAAIhC,EAAUiC,OAAQD,IAAK,CACzC,GAAIT,GAAWvB,EAAUgC,EACzBT,GAASG,UAAUQ,OAAO,mBAI9BxC,EAAGyC,eAAiB,WAClB5C,EAAMqB,KAAK,iBAAkBlB,EAAG2B,uBAC9BR,SACEC,cAAe,UAAWlC,EAAemC,cAE1CjB,QAAQ,SAASC,GAClBL,EAAGmC,uBACF5B,MAAM,SAAUgB,GACjBxB,EAASyB,eAAeD,EAAIE,YAOhCzB,EAAG0C,eAAiB,SAASb,GAC3BhC,EAAAA,UAAa,kBAAoBgC,EAASc,KACxCxB,SACEC,cAAe,UAAWlC,EAAemC,cAE1CjB,QAAQ,SAASC,GAClB,IAAK,GAAIiC,KAAKtC,GAAGM,UAAW,CAC1B,GAAIsC,GAAe5C,EAAGM,UAAUgC,EAChC,IAAIM,EAAaD,MAAQd,EAASc,IAAK,CACrC3C,EAAGM,UAAUuC,OAAOP,EAAGA,EAAI,EAC3B,WAGH/B,MAAM,SAAUgB,GACjBxB,EAASyB,eAAeD,EAAIE,YA9GlChC,QACGC,OAAO,mBACPhB,WAAW,cAAekB,GAE7BA,EAAYkD,SAAW,YAAa,QAAS,UAAW,WAAY,qBAgHtE,WAOE,QAASC,GAAU9D,EAAWc,EAAUb,GACtC,GAAIc,GAAKC,IAETD,GAAGgD,aACDC,MAAQ,GACRC,SAAW,IAGblD,EAAGmD,SAAW,WACZjE,EACGkE,MAAMpD,EAAGgD,aACTzC,MAAM,SAASgB,GACdxB,EAASyB,eAAeD,EAAIE,WAE7B4B,KAAK,WACJpE,EAAUM,KAAK,cApBvBE,QACGC,OAAO,mBACPhB,WAAW,YAAaqE,GAE3BA,EAAUD,SAAW,YAAa,WAAY,qBAsBhD,WAOE,QAASQ,GAAarE,EAAWC,GAC/B,GAAIc,GAAKC,IAETD,GAAGgD,aACDO,KAAO,GACPN,MAAQ,GACRC,SAAW,IAGblD,EAAGmD,SAAW,WACZ1C,QAAQ+C,IAAI,2BACZtE,EACGuE,SAASzD,EAAGgD,aACZzC,MAAM,SAASgB,GACdd,QAAQ+C,IAAIjC,KAEb8B,KAAK,WACJpE,EAAUM,KAAK,cAtBvBE,QACGC,OAAO,mBACPhB,WAAW,eAAgB4E,GAE9BA,EAAaR,SAAW,YAAa,qBAwBvC,WACE,YAOA,SAAS/C,GAAUf,EAAY0E,GAE7B1E,EAAW2E,aAAc,EACzB3E,EAAW4E,eAAiB,EAC5B,IAAIC,GAAmB,SAAUpC,GAC/BzC,EAAW2E,aAAc,EACzB3E,EAAW4E,eAAiBnC,EAC5BiC,EAAS,WACP1E,EAAW2E,aAAc,GACxB,KAGL3E,GAAW8E,WAAY,EACvB9E,EAAW+E,aAAe,EAC1B,IAAIvC,GAAiB,SAAUC,GAC7BzC,EAAW8E,WAAY,EACvB9E,EAAW+E,aAAetC,EAC1BiC,EAAS,WACP1E,EAAW8E,WAAY,GACtB,KAGL,QACED,iBAAmBA,EACnBrC,eAAiBA,GA7BrB/B,QACGC,OAAO,mBACPsE,QAAQ,WAAYjE,GAEvBA,EAAS+C,SAAW,aAAc,eA8BpC,WAOE,QAAS5D,GAAgBW,EAAOoE,GAE9B,GAAIC,GAAY,SAAUC,GACxBF,EAAQG,aAAa,aAAeD,GAGlC9C,EAAW,WACb,MAAO4C,GAAQG,aAAa,cAG1B5E,EAAa,WACf,GACI6E,GADAF,EAAQ9C,GAGZ,SAAG8C,IACDE,EAAUF,EAAMG,MAAM,KAAK,GAC3BD,EAAUJ,EAAQM,KAAKF,GACvBA,EAAUG,KAAKC,MAAMJ,GAEdA,EAAQK,IAAMC,KAAKC,MAAQ,MAMlCC,EAAc,WAChB,GAAGrF,IAAa,CACd,GAAI2E,GAAQ9C,IACRgD,EAAUF,EAAMG,MAAM,KAAK,EAG/B,OAFAD,GAAUJ,EAAQM,KAAKF,GACvBA,EAAUG,KAAKC,MAAMJ,IAEnBpB,MAAQoB,EAAQpB,MAChBM,KAAOc,EAAQd,OAqBrB,OAhBAE,UAAW,SAASvD,GAClB,MAAOL,GAAMqB,KAAK,gBAAiBhB,GAAME,QAAQ,SAASC,GACxD6D,EAAU7D,EAAK8D,UAInBf,MAAQ,SAASlD,GACf,MAAOL,GAAMqB,KAAK,aAAchB,GAAME,QAAQ,SAASC,GACrD6D,EAAU7D,EAAK8D,UAInBW,OAAS,WACPb,EAAQG,aAAaW,WAAW,eAIhCF,YAAcA,EACdX,UAAYA,EACZ7C,SAAWA,EACX7B,WAAaA,EACbiE,SAAWA,SACXL,MAAQA,MACR0B,OAASA,QAlEbrF,QACGC,OAAO,mBACPsE,QAAQ,iBAAkB9E,GAE7BA,EAAe4D,SAAW,QAAS,cAoErC,WAME,QAAShD,GAASD,EAAOX,GAEvB,GAAIiB,GAAa,WACf,MAAON,GAAMmF,IAAI,gBACf7D,SACEC,cAAe,UAAWlC,EAAemC,cAK/C,QACElB,WAAaA,GAhBjBV,QACGC,OAAO,mBACPsE,QAAQ,UAAWlE,GAEtBA,EAAQgD,SAAW,QAAS,qBAiB9B,WAOE,QAASmC,GAAehG,EAAWC,GACjC,GAAIc,GAAKC,IAETD,GAAGR,WAAaN,EAAeM,aAE/BQ,EAAG8E,OAAS,WACV5F,EAAe4F,SACf7F,EAAUM,KAAK,MAGjBS,EAAG6E,YAAc3F,EAAe2F,cAEhC7E,EAAGkF,cAAgB,SAAU3F,GACzB,MAAON,GAAUM,QAAUA,GAlBjCE,QACGC,OAAO,mBACPhB,WAAW,iBAAkBuG,GAEhCA,EAAenC,SAAW,YAAY,qBAmBxC,WAME,QAASqC,KACP,OACEC,SAAU,KACV3G,YAAa,yDACbC,WAAY,2BARhBe,QACGC,OAAO,mBACP2F,UAAU,aAAcF","file":"app.min.js","sourcesContent":["(function () {\n\n  angular.module('forgetMeKnotApp', ['ngRoute']);\n\n  function config ($routeProvider, $locationProvider) {\n    $routeProvider\n      .when('/', {\n        templateUrl: 'home/home.view.html',\n        controller: 'homeCtrl',\n        controllerAs: 'vm'\n      })\n      .when('/register', {\n        templateUrl: '/auth/register/register.view.html',\n        controller: 'registerCtrl',\n        controllerAs: 'vm'\n      })\n      .when('/login', {\n        templateUrl: '/auth/login/login.view.html',\n        controller: 'loginCtrl',\n        controllerAs: 'vm'\n      })\n      .when('/profile', {\n        templateUrl: '/profile/profile.view.html',\n        controller: 'profileCtrl',\n        controllerAs: 'vm'\n      })\n      .otherwise({redirectTo: '/'});\n\n    // use the HTML5 History API\n    $locationProvider.html5Mode(true);\n  }\n\n  function run($rootScope, $location, authentication) {\n    $rootScope.$on('$routeChangeStart', function(event, nextRoute, currentRoute) {\n      if ($location.path() === '/profile' && !authentication.isLoggedIn()) {\n        $location.path('/');\n      }\n    });\n  }\n\n  angular\n    .module('forgetMeKnotApp')\n    .config(['$routeProvider', '$locationProvider', config])\n    .run(['$rootScope', '$location', 'authentication', run]);\n\n})();\n\n(function() {\n\n  angular\n    .module('forgetMeKnotApp')\n    .controller('homeCtrl', homeCtrl);\n\n    function homeCtrl () {\n\n    }\n})();\n\n(function() {\n\n  angular\n    .module('forgetMeKnotApp')\n    .controller('profileCtrl', profileCtrl);\n\n  profileCtrl.$inject = ['$location', '$http', 'fmkData', 'fmkAlert', 'authentication'];\n\n  function profileCtrl($location, $http, fmkData, fmkAlert, authentication) {\n    var vm = this;\n\n    /* User */\n    vm.user = {};\n\n    fmkData.getProfile()\n      .success(function(data) {\n        vm.user = data.user;\n        vm.reminders = data.reminders;\n      })\n      .error(function (e) {\n        console.error(e);\n      });\n\n    /* ====================================================================== */\n    /* Reminders */\n\n    vm.reminders = [];\n\n    /* ---------------------------------------------------------------------- */\n    /* Add Reminder */\n\n    vm.showAddReminderSlideDown = false;\n    vm.newReminder = {\"type\": \"add\", \"title\": \"Call my Mom\", \"remindEveryDays\": 7};\n\n    vm.showAddReminder = function() {\n      vm.showAddReminderSlideDown = true;\n    }\n\n    vm.hideAddReminder = function() {\n      vm.showAddReminderSlideDown = false;\n    }\n\n    vm.createNewReminder = function() {\n      $http.post('/api/reminders', vm.newReminder, {\n        headers: {\n          Authorization: 'Bearer '+ authentication.getToken()\n        }\n      }).success(function(data) {\n        vm.reminders.push(data);\n        vm.hideAddReminder();\n      }).error(function (err) {\n        fmkAlert.showErrorAlert(err.message);\n      });\n    };\n\n    /* ---------------------------------------------------------------------- */\n    /* Update Reminder */\n\n    vm.showUpdateReminderSlideDown = false;\n    vm.focusedUpdateReminder = {\"type\": \"update\"};\n\n    vm.renderUpdateReminderSlideDown = function(reminder) {\n      vm.clearActiveReminders();\n      event.currentTarget.classList.add('fmk-is-active');\n      vm.focusedUpdateReminder = reminder;\n      vm.focusedUpdateReminder.type = 'update';\n      vm.showUpdateReminderSlideDown = true;\n      event.stopPropagation();\n    }\n\n    vm.hideUpdateReminder = function() {\n      vm.showUpdateReminderSlideDown = false;\n      vm.clearActiveReminders();\n    }\n\n    vm.clearActiveReminders = function() {\n      var reminders = document.querySelectorAll('.fmk-reminder-container') ;\n      for (var i = 0; i < reminders.length; i++) {\n        var reminder = reminders[i];\n        reminder.classList.remove('fmk-is-active');\n      }\n    }\n\n    vm.updateReminder = function() {\n      $http.post('/api/reminders', vm.focusedUpdateReminder, {\n        headers: {\n          Authorization: 'Bearer '+ authentication.getToken()\n        }\n      }).success(function(data) {\n        vm.hideUpdateReminder();\n      }).error(function (err) {\n        fmkAlert.showErrorAlert(err.message);\n      });\n    };\n\n    /* ---------------------------------------------------------------------- */\n    /* Delete Reminder */\n\n    vm.deleteReminder = function(reminder) {\n      $http.delete('/api/reminders/' + reminder._id, {\n        headers: {\n          Authorization: 'Bearer '+ authentication.getToken()\n        }\n      }).success(function(data) {\n        for (var i in vm.reminders) {\n          var thisReminder = vm.reminders[i];\n          if (thisReminder._id === reminder._id) {\n            vm.reminders.splice(i, i + 1);\n            break;\n          }\n        }\n      }).error(function (err) {\n        fmkAlert.showErrorAlert(err.message);\n      });\n    };\n  }\n})();\n\n(function () {\n\n  angular\n    .module('forgetMeKnotApp')\n    .controller('loginCtrl', loginCtrl);\n\n  loginCtrl.$inject = ['$location', 'fmkAlert', 'authentication'];\n  function loginCtrl($location, fmkAlert, authentication) {\n    var vm = this;\n\n    vm.credentials = {\n      email : \"\",\n      password : \"\"\n    };\n\n    vm.onSubmit = function () {\n      authentication\n        .login(vm.credentials)\n        .error(function(err){\n          fmkAlert.showErrorAlert(err.message);\n        })\n        .then(function(){\n          $location.path('profile');\n        });\n    };\n  }\n})();\n\n(function () {\n\n  angular\n    .module('forgetMeKnotApp')\n    .controller('registerCtrl', registerCtrl);\n\n  registerCtrl.$inject = ['$location', 'authentication'];\n  function registerCtrl($location, authentication) {\n    var vm = this;\n\n    vm.credentials = {\n      name : \"\",\n      email : \"\",\n      password : \"\"\n    };\n\n    vm.onSubmit = function () {\n      console.log('Submitting registration');\n      authentication\n        .register(vm.credentials)\n        .error(function(err){\n          console.log(err); /* TODO: Display error */\n        })\n        .then(function(){\n          $location.path('profile');\n        });\n    };\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('forgetMeKnotApp')\n    .service('fmkAlert', fmkAlert);\n\n  fmkAlert.$inject = ['$rootScope', '$timeout'];\n  function fmkAlert ($rootScope, $timeout) {\n\n    $rootScope.showSuccess = false;\n    $rootScope.successMessage = '';\n    var showSuccessAlert = function (message) {\n      $rootScope.showSuccess = true;\n      $rootScope.successMessage = message;\n      $timeout(function(){\n        $rootScope.showSuccess = false;\n      }, 5000);\n    };\n\n    $rootScope.showError = false;\n    $rootScope.errorMessage = '';\n    var showErrorAlert = function (message) {\n      $rootScope.showError = true;\n      $rootScope.errorMessage = message;\n      $timeout(function(){\n        $rootScope.showError = false;\n      }, 5000);\n    };\n\n    return {\n      showSuccessAlert : showSuccessAlert,\n      showErrorAlert : showErrorAlert\n    };\n  }\n})();\n\n(function () {\n\n  angular\n    .module('forgetMeKnotApp')\n    .service('authentication', authentication);\n\n  authentication.$inject = ['$http', '$window'];\n  function authentication ($http, $window) {\n\n    var saveToken = function (token) {\n      $window.localStorage['fmk-token'] = token;\n    };\n\n    var getToken = function () {\n      return $window.localStorage['fmk-token'];\n    };\n\n    var isLoggedIn = function() {\n      var token = getToken();\n      var payload;\n\n      if(token){\n        payload = token.split('.')[1];\n        payload = $window.atob(payload);\n        payload = JSON.parse(payload);\n\n        return payload.exp > Date.now() / 1000;\n      } else {\n        return false;\n      }\n    };\n\n    var currentUser = function() {\n      if(isLoggedIn()){\n        var token = getToken();\n        var payload = token.split('.')[1];\n        payload = $window.atob(payload);\n        payload = JSON.parse(payload);\n        return {\n          email : payload.email,\n          name : payload.name\n        };\n      }\n    };\n\n    register = function(user) {\n      return $http.post('/api/register', user).success(function(data){\n        saveToken(data.token);\n      });\n    };\n\n    login = function(user) {\n      return $http.post('/api/login', user).success(function(data) {\n        saveToken(data.token);\n      });\n    };\n\n    logout = function() {\n      $window.localStorage.removeItem('fmk-token');\n    };\n\n    return {\n      currentUser : currentUser,\n      saveToken : saveToken,\n      getToken : getToken,\n      isLoggedIn : isLoggedIn,\n      register : register,\n      login : login,\n      logout : logout\n    };\n  }\n\n})();\n\n(function() {\n  angular\n    .module('forgetMeKnotApp')\n    .service('fmkData', fmkData);\n\n  fmkData.$inject = ['$http', 'authentication'];\n  function fmkData ($http, authentication) {\n\n    var getProfile = function () {\n      return $http.get('/api/profile', {\n        headers: {\n          Authorization: 'Bearer '+ authentication.getToken()\n        }\n      });\n    };\n\n    return {\n      getProfile : getProfile\n    };\n  }\n})();\n\n(function () {\n\n  angular\n    .module('forgetMeKnotApp')\n    .controller('navigationCtrl', navigationCtrl);\n\n  navigationCtrl.$inject = ['$location','authentication'];\n  function navigationCtrl($location, authentication) {\n    var vm = this;\n\n    vm.isLoggedIn = authentication.isLoggedIn();\n\n    vm.logout = function() {\n      authentication.logout();\n      $location.path('/');\n    }\n\n    vm.currentUser = authentication.currentUser();\n\n    vm.isCurrentPath = function (path) {\n        return $location.path() == path;\n    };\n  }\n})();\n\n(function () {\n\n  angular\n    .module('forgetMeKnotApp')\n    .directive('navigation', navigation);\n\n  function navigation () {\n    return {\n      restrict: 'EA',\n      templateUrl: '/common/directives/navigation/navigation.template.html',\n      controller: 'navigationCtrl as navvm'\n    };\n  }\n\n})();\n"]}